<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8"> 
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title><%= location_id %></title>
    <meta name="description" content="Menus for <%= location_id %>">

    <style>
/* latin */
@font-face {
  font-family: 'Karla';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local('Karla'), local('Karla-Regular'), url(https://fonts.gstatic.com/s/karla/v13/qkBbXvYC6trAT7RVLtyU5rZP.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
/* latin */
@font-face {
  font-family: 'Spectral';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local('Spectral Bold'), local('Spectral-Bold'), url(https://fonts.gstatic.com/s/spectral/v6/rnCs-xNNww_2s0amA9uCt23BafaPWnII.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
    </style>

    <style>
<%= SassC::Engine.new(File.read('themes/default.theme/reset.scss')).render %>
<%= SassC::Engine.new(File.read('themes/default.theme/styles.scss')).render %>
<% if args[:'branded-dark-mode'] %><%= SassC::Engine.new(File.read('themes/default.theme/branded-dark-mode.scss')).render %><% end %></style>
  </head>
  <body>
    
    <header>
      <%= location_id %>
      <div>header stuff.  select Location, etc.</div>
    </header>
  
    <div class="menu-driver">

      <nav class="menu-nav">
        <ul class="menus">
        <% for menu in menus %>
          <li>
            <a href="#m<%= menu.id %>" data-menu="menu-<%= menu.id %>"><%= menu.name %></a>
          </li>
        <% end %>
        </ul>
      </nav>

      <% if true %> 
      <div class="baseline-grid">
        <% 100.times do %>
          <div class="guide"></div>
        <% end %>
      </div>
      <% end %>
      
      <ul class="menus">
      <% for menu in menus %>
        <li class="menu" id="menu-<%= menu.id %>">
          <a class="anchor" id="m<%= menu.id %>"></a>
          <div class="name"><%= menu.name %></div>
          <div class="description"><%= menu.description %></div>
          
          <ul class="sections">
          <% for section in menu.sections %>
            <li class="section" id="section-<%= section.id %>">
              <div class="name"><%= section.name %></div>
              <% if section.description %>
                <div class="description"><%= section.description %></div>
              <% end %>
    
              <ul class="items">
              <% for item in section.items %>
                <li class="item<%= ' multiple-prices' if item.choices.count > 1 %>" id="item-<%= item.id %>">
                  <div class="about">
                    <div class="name"><%= item.name %></div>
                    <% if item.description %>
                      <div class="description"><%= item.description %></div>
                    <% end %>
                  </div>
  
                  <% if item.choices.count > 0 %>
                  <ul class="choices">
                    <% for choice in item.choices %>
                      <li class="choice">
                        <% if choice.name %>
                          <div class="name">
                            <%= choice.name %>
                          </div>
                        <% end %>
                        <div class="price">
                          <%= choice.prices['min'] %>
                        </div>
                      </li>
                    <% end %>
                  </ul>
                  <% end %>
  
                </li>
              <% end %>
              </ul>
              
            </li>
          <% end %>
          </ul>
          
        </li>
      <% end %>
      </ul>

    </div><!-- .menu-driver -->

    <script>
      let mainNavLinks = document.querySelectorAll("nav ul li a");
      let mainSections = document.querySelectorAll("menus menu");
      
      let lastId;
      let cur = [];
      
      function setCurrentNav() {
        let fromTop = window.scrollY;

        console.log("mainNavLinks: " + JSON.stringify(mainNavLinks));
      
        mainNavLinks.forEach(link => {
          let menu =
            document.querySelector(
              "#" + link.getAttribute("data-menu"));

          if (
            menu.offsetTop <= fromTop &&
            menu.offsetTop + menu.offsetHeight > fromTop
          ) {
            link.classList.add("current");

            // let nav = link.parentNode.parentNode.parentNode;
            // nav.scrollLeft = link.parentNode.offsetLeft - nav.offsetLeft;
            // console.log("snapping.");
            
            // // Scroll the current menu's nav link into view.
            // let nav = link.parentNode.parentNode.parentNode;
            // if(window.innerWidth >= 768) {
            //   nav.scrollTo({
            //     top: link.parentNode.offsetTop - nav.offsetTop,
            //     left: 0,
            //     behavior: 'smooth'
            //   });
            // } else {
            //   nav.scrollTo({
            //     top: 0,
            //     left: link.parentNode.offsetLeft - nav.offsetLeft,
            //     behavior: 'smooth'
            //   });
            // }

          } else {
            link.classList.remove("current");
          }
        });
      }
      
      /* Do it when... */
      window.addEventListener("scroll", event => {
        setCurrentNav();
      });
      
      /* Do it now. */
      setCurrentNav();
      
      /* Set height of menu list for wide screens so that it can scroll. */
      var elements = document.getElementsByClassName('menu-nav');
      var windowheight = window.innerHeight + "px";
      
      fullheight(elements);
      function fullheight(elements) {
        /* This 1024 must match the breakpoint in the CSS for going
           from a top nav to a side nav. */
        if(window.innerWidth >= 768) {
          for(let el in elements){
            if(elements.hasOwnProperty(el)){
              elements[el].style.height = windowheight;
            }
          }
        } else {
          for(let el in elements){
            if(elements.hasOwnProperty(el)){
              elements[el].style.height = null;
            }
          }
        }
      }
      
      /* Do it when. */
      window.onresize = function(event){
       fullheight(elements);
      }
      
      /* Do it now. */
      fullheight(elements);

    </script>
  </body>
</html>